{"version":3,"sources":["components/listItems.js","components/SimpleLineChart.js","components/SimpleTable.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["mainListItems","react_default","a","createElement","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","ShoppingCart_default","People_default","BarChart_default","Layers_default","secondaryListItems","ListSubheader_default","inset","Assignment_default","data","name","Visits","Requests","SimpleLineChart","ResponsiveContainer_default","width","height","LineChart_default","XAxis_default","dataKey","YAxis_default","CartesianGrid_default","vertical","strokeDasharray","Tooltip_default","Legend_default","Line_default","type","stroke","activeDot","r","id","createData","calories","fat","carbs","protein","withStyles","root","overflowX","table","minWidth","props","classes","Paper_default","className","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","n","key","component","scope","Dashboard","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","this","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","color","aria-label","onClick","menuButton","menuButtonHidden","Menu_default","Typography_default","variant","noWrap","title","Badge_default","badgeContent","Notifications_default","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","content","appBarSpacer","gutterBottom","chartContainer","components_SimpleLineChart","tableContainer","components_SimpleTable","React","Component","theme","display","paddingRight","Object","objectSpread","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","enteringScreen","marginRight","flexGrow","whiteSpace","defineProperty","spacing","unit","breakpoints","up","overflow","h5","marginBottom","App","components_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2403ade2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Requests\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Customers\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Reports\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <LayersIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Integrations\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Saved reports</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Current month\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Last quarter\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Year-end\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\r\nimport LineChart from \"recharts/lib/chart/LineChart\";\r\nimport Line from \"recharts/lib/cartesian/Line\";\r\nimport XAxis from \"recharts/lib/cartesian/XAxis\";\r\nimport YAxis from \"recharts/lib/cartesian/YAxis\";\r\nimport CartesianGrid from \"recharts/lib/cartesian/CartesianGrid\";\r\nimport Tooltip from \"recharts/lib/component/Tooltip\";\r\nimport Legend from \"recharts/lib/component/Legend\";\r\n\r\nconst data = [\r\n  { name: \"Mon\", Visits: 2200, Requests: 3400 },\r\n  { name: \"Tue\", Visits: 1280, Requests: 2398 },\r\n  { name: \"Wed\", Visits: 5000, Requests: 4300 },\r\n  { name: \"Thu\", Visits: 4780, Requests: 2908 },\r\n  { name: \"Fri\", Visits: 5890, Requests: 4800 },\r\n  { name: \"Sat\", Visits: 4390, Requests: 3800 },\r\n  { name: \"Sun\", Visits: 4490, Requests: 4300 }\r\n];\r\n\r\nfunction SimpleLineChart() {\r\n  return (\r\n    // 99% per https://github.com/recharts/recharts/issues/172\r\n    <ResponsiveContainer width=\"99%\" height={320}>\r\n      <LineChart data={data}>\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"Visits\" stroke=\"#82ca9d\" />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"Requests\"\r\n          stroke=\"#8884d8\"\r\n          activeDot={{ r: 8 }}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default SimpleLineChart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst styles = {\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n};\r\n\r\nlet id = 0;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return { id, name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst data = [\r\n  createData(\"App1\", 159, 6.0, 24, 4.0),\r\n  createData(\"App2\", 237, 9.0, 37, 4.3),\r\n  createData(\"App3\", 262, 16.0, 24, 6.0),\r\n  createData(\"App4\", 305, 3.7, 67, 4.3),\r\n  createData(\"App5\", 356, 16.0, 49, 3.9)\r\n];\r\n\r\nfunction SimpleTable(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Map Title</TableCell>\r\n            <TableCell align=\"right\">Dataset1</TableCell>\r\n            <TableCell align=\"right\">Dataset2</TableCell>\r\n            <TableCell align=\"right\">Dataset3</TableCell>\r\n            <TableCell align=\"right\">Dataset4</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(n => (\r\n            <TableRow key={n.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {n.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{n.calories}</TableCell>\r\n              <TableCell align=\"right\">{n.fat}</TableCell>\r\n              <TableCell align=\"right\">{n.carbs}</TableCell>\r\n              <TableCell align=\"right\">{n.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SimpleTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { mainListItems, secondaryListItems } from \"./listItems\";\r\nimport SimpleLineChart from \"./SimpleLineChart\";\r\nimport SimpleTable from \"./SimpleTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\"\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing.unit * 7,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing.unit * 9\r\n    }\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    height: \"100vh\",\r\n    overflow: \"auto\"\r\n  },\r\n  chartContainer: {\r\n    marginLeft: -22\r\n  },\r\n  tableContainer: {\r\n    height: 320\r\n  },\r\n  h5: {\r\n    marginBottom: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass Dashboard extends React.Component {\r\n  state = {\r\n    open: true\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={classNames(\r\n            classes.appBar,\r\n            this.state.open && classes.appBarShift\r\n          )}\r\n        >\r\n          <Toolbar\r\n            disableGutters={!this.state.open}\r\n            className={classes.toolbar}\r\n          >\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(\r\n                classes.menuButton,\r\n                this.state.open && classes.menuButtonHidden\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              Dashboard\r\n            </Typography>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classNames(\r\n              classes.drawerPaper,\r\n              !this.state.open && classes.drawerPaperClose\r\n            )\r\n          }}\r\n          open={this.state.open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>{mainListItems}</List>\r\n          <Divider />\r\n          <List>{secondaryListItems}</List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Typography variant=\"h4\" gutterBottom component=\"h2\">\r\n            Requests\r\n          </Typography>\r\n          <Typography component=\"div\" className={classes.chartContainer}>\r\n            <SimpleLineChart />\r\n          </Typography>\r\n          <Typography variant=\"h4\" gutterBottom component=\"h2\">\r\n            Data Sets\r\n          </Typography>\r\n          <div className={classes.tableContainer}>\r\n            <SimpleTable />\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Dashboard);\r\n","import React from \"react\";\r\nimport Dashboard from \"./components/Dashboard.js\"\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Dashboard />\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}